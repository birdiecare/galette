// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it displays only one loading indicator on the first page 1`] = `
<RCTScrollView
  canLoadMore={true}
  displayLoading={false}
  distanceToLoadMore={100}
  isLoading={true}
  onLoadMoreAsync={[Function]}
  onScroll={[Function]}
  refreshControl={
    <RefreshControlMock
      onRefresh={[Function]}
      refreshing={true}
      tintColor="#fff"
      title="Loading..."
      titleColor="#fff"
    />
  }
  renderLoadingErrorIndicator={[Function]}
  renderLoadingIndicator={[Function]}
  scrollEventThrottle={100}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTRefreshControl />
  <View>
    <RCTScrollView
      DEPRECATED_sendUpdatedChildFrames={true}
      dataSource={
        ListViewDataSource {
          "_cachedRowCount": 1,
          "_dataBlob": Object {
            "s1": Array [
              Object {
                "foo": "bar",
              },
            ],
          },
          "_dirtyRows": Array [
            Array [
              true,
            ],
          ],
          "_dirtySections": Array [
            true,
          ],
          "_getRowData": [Function],
          "_getSectionHeaderData": [Function],
          "_rowHasChanged": [Function],
          "_sectionHeaderHasChanged": [Function],
          "rowIdentities": Array [
            Array [
              "0",
            ],
          ],
          "sectionIdentities": Array [
            "s1",
          ],
        }
      }
      enableEmptySections={true}
      initialListSize={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={1000}
      onLayout={[Function]}
      onScroll={[Function]}
      pageSize={1}
      removeClippedSubviews={true}
      renderRow={[Function]}
      scrollEventThrottle={50}
      scrollRenderAheadDistance={1000}
      stickyHeaderIndices={Array []}
      stickySectionHeadersEnabled={true}
    >
      <View>
        <Text>
          Row
        </Text>
      </View>
    </RCTScrollView>
  </View>
</RCTScrollView>
`;

exports[`it displays the bottom loading indicator when more than one page has been loaded 1`] = `
<RCTScrollView
  canLoadMore={true}
  displayLoading={true}
  distanceToLoadMore={100}
  isLoading={true}
  onLoadMoreAsync={[Function]}
  onScroll={[Function]}
  refreshControl={
    <RefreshControlMock
      onRefresh={[Function]}
      refreshing={true}
      tintColor="#fff"
      title="Loading..."
      titleColor="#fff"
    />
  }
  renderLoadingErrorIndicator={[Function]}
  renderLoadingIndicator={[Function]}
  scrollEventThrottle={100}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTRefreshControl />
  <View>
    <RCTScrollView
      DEPRECATED_sendUpdatedChildFrames={true}
      dataSource={
        ListViewDataSource {
          "_cachedRowCount": 2,
          "_dataBlob": Object {
            "s1": Array [
              Object {
                "foo": "bar",
              },
              Object {
                "foo": "baz",
              },
            ],
          },
          "_dirtyRows": Array [
            Array [
              true,
              true,
            ],
          ],
          "_dirtySections": Array [
            true,
          ],
          "_getRowData": [Function],
          "_getSectionHeaderData": [Function],
          "_rowHasChanged": [Function],
          "_sectionHeaderHasChanged": [Function],
          "rowIdentities": Array [
            Array [
              "0",
              "1",
            ],
          ],
          "sectionIdentities": Array [
            "s1",
          ],
        }
      }
      enableEmptySections={true}
      initialListSize={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={1000}
      onLayout={[Function]}
      onScroll={[Function]}
      pageSize={1}
      removeClippedSubviews={true}
      renderRow={[Function]}
      scrollEventThrottle={50}
      scrollRenderAheadDistance={1000}
      stickyHeaderIndices={Array []}
      stickySectionHeadersEnabled={true}
    >
      <View>
        <Text>
          Row
        </Text>
        <Text>
          Row
        </Text>
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flex": 1,
          "justifyContent": "center",
          "padding": 20,
        }
      }
    >
      <ActivityIndicator
        animating={true}
        color="#999999"
        hidesWhenStopped={true}
        size="small"
      />
    </View>
  </View>
</RCTScrollView>
`;
